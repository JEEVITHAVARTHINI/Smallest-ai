openapi: 3.0.3
info:
  title: Smallest AI API
  version: 1.0.0
  description: |
    Welcome to the Smallest AI API documentation. This guide will walk you through everything you need to get started using our endpoints effectively.

    ### Authentication
    All endpoints require an API key passed in the header:
    ```bash
    curl -H "Authorization: Bearer YOUR_API_KEY" https://api.smallest.ai/user/get-user-details
    ```

    #### Key Rotation
    - Rotate keys periodically to reduce risk.
    - Revoke old or compromised keys immediately.
    - Use different keys for different environments (dev, staging, prod).

    ### Error Codes & Troubleshooting
    | Status Code | Meaning           | Troubleshooting Suggestion              |
    |-------------|-------------------|------------------------------------------|
    | 400         | Bad Request       | Check input format or required fields.  |
    | 401         | Unauthorized      | Verify API key is valid and included.   |
    | 404         | Not Found         | Ensure endpoint and path parameters are correct. |
    | 500         | Server Error      | Retry or report to support.             |

    ### SDK Usage
    **Python Example:**
    ```python
    import requests
    headers = {"Authorization": "Bearer YOUR_API_KEY"}
    response = requests.get("https://api.smallest.ai/user/get-user-details", headers=headers)
    print(response.json())
    ```

    **JavaScript Example:**
    ```js
    fetch("https://api.smallest.ai/user/get-user-details", {
      headers: {"Authorization": "Bearer YOUR_API_KEY"}
    }).then(res => res.json()).then(console.log);
    ```

    ### Endpoint Summary
    | Tag             | Summary                           |
    |-----------------|---------------------------------|
    | User            | Retrieve and manage user data   |
    | Organization    | Manage organizations            |
    | Agent Templates | Work with agent templates       |
    | Agents          | Operate and manage agents       |
    | Logs            | Access and filter logs          |
    | Calls           | Retrieve call info and transcripts |
    | Knowledge Base  | Add, update, retrieve knowledge |

servers:
  - url: https://api.smallest.ai
    description: Production Server

tags:
  - name: User
    description: Retrieve and manage user-related data.
  - name: Organization
    description: Manage organization data.
  - name: Agent Templates
    description: Templates used to create agents.
  - name: Agents
    description: Agent-related endpoints.
  - name: Logs
    description: Access logs and audit trails.
  - name: Calls
    description: Call-related data and transcripts.
  - name: Knowledge Base
    description: Upload and retrieve documents.

paths:
  # User Endpoints
  /user/get-user-details:
    get:
      tags:
        - User
      summary: Retrieve user info
      description: Get detailed information about a user using their ID.
      operationId: getUserDetails
      parameters:
        - name: user_id
          in: query
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: "123"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "john@example.com"
        '400':
          description: Bad Request - Invalid input
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Not Found - User does not exist
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /user/create:
    post:
      tags:
        - User
      summary: Create a new user
      description: Add a new user to the system.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad Request - Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /user/update:
    put:
      tags:
        - User
      summary: Update user information
      description: Modify existing user details.
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /user/delete:
    delete:
      tags:
        - User
      summary: Delete a user
      description: Remove a user by ID.
      operationId: deleteUser
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  # Organization Endpoints
  /organization/get-org-details:
    get:
      tags:
        - Organization
      summary: Retrieve organization details
      description: Fetch organization info by ID.
      operationId: getOrgDetails
      parameters:
        - name: org_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with organization details
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /organization/create:
    post:
      tags:
        - Organization
      summary: Create a new organization
      description: Add a new organization.
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Organization created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /organization/update:
    put:
      tags:
        - Organization
      summary: Update organization details
      description: Modify organization info.
      operationId: updateOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - org_id
              properties:
                org_id:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Organization updated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /organization/delete:
    delete:
      tags:
        - Organization
      summary: Delete an organization
      description: Remove organization by ID.
      operationId: deleteOrganization
      parameters:
        - name: org_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Organization deleted
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  # Agent Templates Endpoints
  /agent-templates/list:
    get:
      tags:
        - Agent Templates
      summary: List agent templates
      description: Retrieve all available agent templates.
      operationId: listAgentTemplates
      responses:
        '200':
          description: Successful response with list of agent templates
        '401':
          description: Unauthorized
        '500':
          description: Server Error
      security:
        - bearerAuth: []

  /agent-templates/create:
    post:
      tags:
        - Agent Templates
      summary: Create an agent template
      description: Add a new agent template.
      operationId: createAgentTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - template_name
              properties:
                template_name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Agent template created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Server
