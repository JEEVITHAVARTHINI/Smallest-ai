openapi: 3.0.3
info:
  title: Smallest AI API
  version: 1.0.0
  description: |
    Sample API with all tags and CRUD endpoints to verify display.

servers:
  - url: https://api.smallest.ai
    description: Production Server

tags:
  - name: User
    description: |
      Manage user data including profile retrieval.
      Create, update, and delete user accounts.
  - name: Organization
    description: |
      Manage organizations and their settings.
      Full CRUD operations for organizations.
  - name: Agent Templates
    description: |
      Templates for agents used in the system.
      Create, update, and manage templates.
  - name: Agents
    description: |
      Manage agent entities created from templates.
      Full CRUD operations on agents.
  - name: Logs
    description: |
      View and manage system logs.
      Filter, retrieve, and delete log entries.
  - name: Calls
    description: |
      Manage call metadata and transcripts.
      Create, update, and delete call records.
  - name: Knowledge Base
    description: |
      Upload, search, and manage documents.
      Full CRUD for knowledge base content.

paths:

  # Agents example endpoints
  /agents/get-agent:
    get:
      tags:
        - Agents
      summary: Retrieve agent details
      parameters:
        - name: agent_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /agents/create-agent:
    post:
      tags:
        - Agents
      summary: Create a new agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - template_id
              properties:
                name:
                  type: string
                template_id:
                  type: string
      responses:
        '201':
          description: Agent created

  /agents/update-agent:
    put:
      tags:
        - Agents
      summary: Update agent details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - agent_id
              properties:
                agent_id:
                  type: string
                name:
                  type: string
                template_id:
                  type: string
      responses:
        '200':
          description: Agent updated

  /agents/delete-agent:
    delete:
      tags:
        - Agents
      summary: Delete an agent
      parameters:
        - name: agent_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Agent deleted

  # Logs example endpoints
  /logs/fetch:
    get:
      tags:
        - Logs
      summary: Fetch logs
      responses:
        '200':
          description: Logs fetched

  /logs/delete:
    delete:
      tags:
        - Logs
      summary: Delete a log entry
      parameters:
        - name: log_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Log deleted

  # Calls example endpoints
  /calls/get-call-info:
    get:
      tags:
        - Calls
      summary: Get call information
      parameters:
        - name: call_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Call info retrieved

  /calls/create-call:
    post:
      tags:
        - Calls
      summary: Create a call record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - caller_id
                - callee_id
                - timestamp
              properties:
                caller_id:
                  type: string
                callee_id:
                  type: string
                timestamp:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Call created

  /calls/delete-call:
    delete:
      tags:
        - Calls
      summary: Delete a call record
      parameters:
        - name: call_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Call deleted

  # Knowledge Base example endpoints
  /knowledge-base/search:
    get:
      tags:
        - Knowledge Base
      summary: Search the knowledge base
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results

  /knowledge-base/upload:
    post:
      tags:
        - Knowledge Base
      summary: Upload document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Document uploaded

  /knowledge-base/delete:
    delete:
      tags:
        - Knowledge Base
      summary: Delete a document
      parameters:
        - name: document_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Document deleted
